CREATE DATABASE if not exists patient ;
CREATE DATABASE if not exists appointment_system ;
CREATE DATABASE if not medical_records ;
CREATE DATABASE if not exists labs ;
CREATE DATABASE if not exists messaging_system ; 

CREATE TABLE patient_info 
(
  id string OPTIONS(description="the unique id for each patient, Can be auto generated or created by the backend service"),
  first_name string OPTIONS(description="Firstname / givenName of the patient"),
  last_name string OPTIONS(description="Last name of the patient"),
  sex string OPTIONS(description="Biological sex of the patient"),
  birth_date string OPTIONS(description="Date of Birth of the patient"),
  medical_id string OPTIONS(description="Medical identification of the patient, Can be autogenerated or createb by the backend service"),
  adhar_id string OPTIONS(description="national identification number provided by the government"),
  email_id string OPTIONS(description="email address of the patient"),
  phone_no string OPTIONS(description="phone number of the patient"),
  address string OPTIONS(description="current Address of the patient "),
  city string OPTIONS(description="current city  the patient lives"),
  state_prov string OPTIONS(description="current name of the state/province/ut the patient lives in"),
  country string OPTIONS(description="current name of the country the patient lives in "),
  zipcode string OPTIONS(description="zipcode of the patient"),
  emergency_contact_id_list ARRAY<STRING> OPTIONS(description="emergency contact id's of the patient") );
  
  CREATE TABLE appointments 
  (
    patient_id string OPTIONS(description="the unique id for each patient, Can be auto generated or created by the backend service"),
    doctor_id string OPTIONS(description="the unique id of the health care provider that the patient is going to visit "),
    lab_id string OPTIONS(description="unique id of the lab that the patient is going to visit"),
    speciality string OPTIONS(description="speciality of the health care provider"),
    symptoms string OPTIONS(description="symptons of the patient "),
    appointmentDate string OPTIONS(description="Date of the appointment"),
    appointmentTime string OPTIONS(description="Time of the Appointment"),
    location string OPTIONS(description="Location of the health care provider / lab"),
    visit_status boolean OPTIONS(description="whether the patient visited the health provider)
    visit_type string OPTIONS(description="type of visit whether it is a  clinic/lab/inpatient) ) ;
    
  CREATE TABLE immunizations
  (
     patient_id string OPTIONS(description="the unique id for each patient, Can be auto generated or created by the backend service"),
     doctor_id string OPTIONS(description= "unique id of the doctor who prescribed the immunization"),
     medical_id  string OPTIONS(description= "Medical id of the patient"),
     immunization_date string OPTIONS(description= "Date of Immunization"),
     immunazation_name string OPTIONS(description= "Name of the Immunization"),
     immunization_location string OPTIONS(description= "Location of the Immunization"),
     immunization_validition string OPTIONS(description= "validity date of the Immunization") );
    
  
   CREATE TABLE tests (
     patient_id string OPTIONS(description="the unique id for each patient, Can be auto generated or created by the backend service"),
     doctor_id string OPTIONS(description= "unique id of the doctor who prescribed the tests"),
     medical_id string OPTIONS(description= "Medical id of the patient"),
     test_type string OPTIONS(description= "type of the test"),
     test_date string OPTIONS(description= "Date of the test"),
     test_time string OPTIONS(descrition= "Time of the test"), 
     test_lab_name string OPTIONS(description= "Name of the Lab name"),
     location string OPTIONS(description= "Location of the Lab"),
     test_result string OPTIONS(description= "Result of the the test"),
     result_datetime string OPTIONS(description= "Result date of the test"), 
     result_details string OPTIONS(description= " Detail description of the test ") ) ;
     
   CREATE TABLE past_visits (
     patient_id string OPTIONS(description="the unique id for each patient, Can be auto generated or created by the backend service"),
     medical_id string OPTIONS(description= "Medical id of the patient"),
     appointment_info string OPTIONS(description= "Information about appointment"),
     doctor_id string OPTIONS(description= "unique id of the doctor the patient visited"),
     care_type string OPTIONS(description= "speciality type of the care provided"),
     visit_summary string OPTIONS(description= "summary of the visit"),
     post_visit_instructions string OPTIONS(description= "Instructions provided to the patient regarding the visit"),
     vitals_info string OPTIONS(description= "Vitals observed on the patient at the time of the visit"),
     other string OPTIONS(description= "Other information abt the visit") ) ;
     
  
  CREATE TABLE health_summary (
    patient_id string OPTIONS(description="the unique id for each patient, Can be auto generated or created by the backend service"),
    doctor_id string OPTIONS(description= "unique id of the doctor the patient visited"),
    health_condition string OPTIONS(description= "diagnosed condition at the time of visit"),
    condition_description string OPTIONS(description= "Detail description of the diagnosed condition"),
    identified_date string OPTIONS(description= "date of identification"),
    condition_status string OPTIONS(description= "Current status of the condition"),
    care_instructions string OPTIONS(description= "Instrctions to follow to remediate the cause"),
    knomledge_base string OPTIONS(description= "unique id of the doctor the patient visited") ) ;
    
    
  CREATE TABLE allergies (
     patient_id string OPTIONS(description="the unique id for each patient, Can be auto generated or created by the backend service"),
     allergy_type string OPTIONS(description="type of allergy"),
     allergy_name string OPTIONS(description="name of the allergy"),
     allergy_date string OPTIONS(description="Date of the Allergy thats been identified"),
     allergy_description string OPTIONS(description="Detail description of the allergy")) ;
     
     
   CREATE TABLE letters (
      patient_id string OPTIONS(description="the unique id for each patient, Can be auto generated or created by the backend service"),
      doctor_id string OPTIONS(description="unique identification of the doctor visited"),
      subject string OPTIONS(description="what is the letter about either day off / long period rest from work ond so forth"),
      description string OPTIONS(description="Detail description of the details on how long the patient need to rest or take off or travel purposes"),
      date string OPTIONS(description="Date the letter been created") ) ;
      
  CREATE TABLE messaging_system (
      patient_id  string OPTIONS(description="the unique id for each patient, Can be auto generated or created by the backend service"),
      phone_num string OPTIONS(description="phone number of the patient to send the message"),
      email_address string OPTIONS(description="email address of the patient to send the message"),
      message_alert_type string OPTIONS(description="type of message"),
      message_description string OPTIONS(description="Detail message to the patient") ) ; 
      
   
  
  
  
